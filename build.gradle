plugins {
    id 'com.github.johnrengelman.shadow' version '6.1.0'
    id 'java'
}

group 'org.mcube.backup'
version '1.0'

repositories {
    mavenCentral()
    jcenter()
//    flatDir {
//        dirs 'libs'
//    }
}




dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
//    compile fileTree(include: ['*.jar'], dir: 'libs')
    implementation fileTree('libs') { include '*.jar' }
    implementation 'org.zeroturnaround:zt-zip:1.16'
//    implementation 'org.slf4j:slf4j-simple:1.7.30'
    implementation 'org.json:json:20230227'
    implementation 'com.squareup.okhttp3:okhttp:4.11.0'
    implementation 'commons-io:commons-io:2.8.0'
    implementation 'mysql:mysql-connector-java:8.0.20'
    implementation 'org.mariadb.jdbc:mariadb-java-client:3.1.4'
    implementation 'ch.qos.logback:logback-core:1.4.9'
    implementation 'org.slf4j:slf4j-api:1.7.30'
    implementation 'ch.qos.logback:logback-classic:1.2.9'

}

test {
    useJUnitPlatform()
}

jar {
    manifest {
        attributes "Main-Class": "com.tcgdigital.mcube.backup.BackupTaker"
    }

    from {
        configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    duplicatesStrategy(DuplicatesStrategy.WARN)

}

task fatJar(type: Jar) {
    manifest {
        attributes 'Main-Class': "com.tcgdigital.mcube.backup.BackupTaker"
    }
    archiveBaseName = "${rootProject.name}"
    from { configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    duplicatesStrategy(DuplicatesStrategy.WARN)
    with jar
}

